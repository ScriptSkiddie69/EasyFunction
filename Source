

local Custom = {
    Functions = {},
    Visuals = {},
    Player = {},
    Check = {},
    Bool = {}
    }
    local allProperties = {
        Part = {
            "ClassName",
            "Name",
            "Archivable",
            "Parent",
            "RobloxLocked",
            "Size",
            "Position",
            "Orientation",
            "Anchored",
            "CanCollide",
            "Locked",
            "Material",
            "BrickColor",
            "Transparency",
            "Reflectance",
            "CanTouch",
            "BottomSurface",
            "TopSurface",
            "LeftSurface",
            "RightSurface",
            "FrontSurface",
            "BackSurface",
        },
        Humanoid = {
            "ClassName",
            "Name",
            "Archivable",
            "Parent",
            "RobloxLocked",
            "HipHeight",
            "Health",
            "MaxHealth",
            "WalkSpeed",
            "JumpPower",
            "RootPart",
            "RigType",
            "Sit",
            "PlatformStand",
            "TargetPoint",
            "PlatformWeld",
            "SeatPart",
            "Jump",
            "MoveDirection",
            "RelativeJointTorque",
            "RelativeJointPosition",
            "FloorMaterial",
            "Animator",
            "MaxSlope",
            "Climbing",
            "Died",
            "Running",
            "Swimming",
            "Jumping",
            "GettingUp",
            "FallingDown",
            "FreeFalling",
            "Ragdoll",
            "PlatformStanding",
            "Sitting",
        },
        Mesh = {
            "ClassName",
            "Name",
            "Archivable",
            "Parent",
            "RobloxLocked",
            "MeshId",
            "TextureId",
            "VertexColor",
            "VertexSize",
            "VertexSizeRelativeToPart",
            "Offset",
            "Scale",
            "Orientation",
            "MeshType",
            "MeshScale",
            "TextureMode",
            "VertexColorMode",
            "VertexNormal",
        },
        Model = {
            "Name",
            "Parent",
            "PrimaryPart",
            "Archivable",
            "ClassName",
            "WorldPivot",
        }, 
        MeshPart = {
            "Anchored",
            "CanCollide",
            "CFrame",
            "Material",
            "Size",
            "Transparency",
            "BrickColor",
            "Name",
            "Parent",
            "Position",
            "Orientation",
            "Velocity",
            "RotVelocity",
            "FormFactor",
            "Shape",
            "BottomSurface",
            "TopSurface",
            "FrontSurface",
            "BackSurface",
            "LeftSurface",
            "RightSurface",
            "CustomPhysicalProperties",
            "EulerAngles",
            "SizeConstraint",
            "Transparency",
            "CanQuery",
            "CanTouch",
            "Archivable",
            "Locked",
            "Shape",
            "Massless",
            "LocalTransparencyModifier",
            "Reflectance",
            "RootPriority",
            "MeshId",
            "MeshSize",
            "MeshType",
            "TextureID",
            "VertexColor",
            "VertexColor3",
            "VertexSize",
        }, 
        IntValue = {
                "ClassName",
                "Name",
                "Archivable",
                "Parent",
                "RobloxLocked",
                "Value",
            },
            NumberValue = {
                "ClassName",
                "Name",
                "Archivable",
                "Parent",
                "RobloxLocked",
                "Value",
            },
            BoolValue = {
                "ClassName",
                "Name",
                "Archivable",
                "Parent",
                "RobloxLocked",
                "Value",
            },
            StringValue = {
                "ClassName",
                "Name",
                "Archivable",
                "Parent",
                "RobloxLocked",
                "Value",
            },
            ObjectValue = {
                "ClassName",
                "Name",
                "Archivable",
                "Parent",
                "RobloxLocked",
                "Value",
            },
    }
    function GetPlayer(String)
        local plr
        local strl = String:lower()
            for i, v in pairs(game:GetService("Players"):GetPlayers()) do
                if v.Name:lower():sub(1, #String) == String:lower() or v.DisplayName:lower():sub(1, #String) == String:lower() then
                    plr = v
                end 
            end
            if String == "me" then
                    plr = game.Players.LocalPlayer
                end
                if String == "random" then
                    local players = game.Players:GetPlayers()
                    plr = players[math.random(#players)]
                end
                if String == "all" or String == "everyone" or String == "Others" then
                    local players = game.Players:GetPlayers()
                    plr = players
                end
            if String == "" or String == " " then
               plr = nil
            end
        return plr
    end
    
    
    function Custom.Visuals:HighlightEsp(player,color)
    local character = GetPlayer(player).Character
    if character:FindFirstChild('MkRtLpAerTiyj') then
        print('noo')
    else
    local highlight = Instance.new('Highlight')
    highlight.Parent = character
    highlight.Name = "MkRtLpAerTiyj"
    highlight.FillColor = color
    end
end
    function Custom.Visuals:DisableEsp(player)
        local character = GetPlayer(player).Character
        character:FindFirstChild('MkRtLpAerTiyj'):Destroy()
    end
    function Custom.Check:GetNearestPlayer()
        local nearest = nil
        local dist = math.huge 
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer and player.Character then
                local distance = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if distance < dist then
                    nearest = player.Name
                    dist = distance
                end
            end
        end
        return nearest
    end
    function Custom.Functions:Teleport(player)
    local character = GetPlayer(player).Character
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = character.HumanoidRootPart.CFrame
    end
    function Custom.Functions:SetWalkSpeed(number)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = number
    end
    function Custom.Functions:SetJumpPower(number)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = number
    end
    function Custom.Functions:SetLoop(Delay, bool, loopname, Function)
        _G[loopname] = bool
        while _G[loopname] do
            wait(Delay)
            Function()
        end
    end
        function Custom.Functions:GetProperties(instance)
            local class = instance.ClassName
            local properties = allProperties[class]
        
            if properties then
                local retrn = {}
                for _, property in ipairs(properties) do
                    retrn[property] = instance[property]
                end
                return retrn
            else
                print("properties not supported, name: " .. class)
            end
        end
        function Custom.Functions:HookValue(obj,prop,value)
            local mt = getrawmetatable(game)

setreadonly(mt, false)
local old = mt.__index

mt.__index = function(object, property)
 if tostring(object) == tostring(obj) and tostring(property) == tostring(prop) then
     return value
   end

 return old(object,property)


    end
end

return Custom

--[[Custom.Functions:HookValue('Humanoid','WalkSpeed',1200)
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 69
print(game.Players.LocalPlayer.Character.Humanoid.WalkSpeed)
-- this should return 69 but we hooked the value so it returns 1200 tho in reality the walkspeed is 69]]

